#Buscador / Consultas, con criterio full scope, para buscar por palabras clave en la base de datos desde la interface.

# Implementar lógica o función para la extracción de SKUs sin revisión en SGA ALL.xlsx
- Extraer SKUs con valor cero "0" en revisión portuguesa e italiana (Etiqueta Portuguesa + Etiqueta Italiana, no en etiquetado) para separar y pedir almacén.

# Implementar tools individuales, Excel-Combiner + Excel-Divider como tools de la app principal
- Unificar todas las tools en una sola app.
- Capacidad para la app manejar módulos, añadir mini apps, que funciones serían vitales para la revisión, traducción e internacionalización. (Buscar productos sin revisión en archivo maestro SGA ALL.xlsx)

# Contador Counter live fijado incremental
- Revisados: %SoloRevisados%
- Traducidos: %SoloRevisados% + %TRADUCIDOS%

[PRIORIDAD] # Implementar contador de turno
- Marcar entrada/salida-mañana-tarde (almacenamiento diario)

# Implementar almacenamiento de backups y dumps exportadas
- Traducciones PT+IT, triggers de revisión 0/1 no/si en ALL.

# Recomendaciones para mejorar la aplicación

## Utilidades
- Implementar un sistema de notificaciones para alertar sobre tareas pendientes o errores.
- Añadir una funcionalidad de auto-guardado para evitar la pérdida de datos.

## Rendimiento
- Optimizar las consultas a la base de datos para mejorar la velocidad de respuesta.
- Implementar caching para reducir la carga en la base de datos.

## Funciones para implementar
- Añadir una funcionalidad de exportación de datos a diferentes formatos (CSV, Excel, PDF).
- Implementar un sistema de permisos y roles para gestionar el acceso a diferentes partes de la aplicación.

## Tools útiles
- Integrar herramientas de análisis de datos para generar reportes y estadísticas.
- Añadir una herramienta de migración de datos para facilitar la actualización de la base de datos.

## Formatos y temas coloridos
- Implementar temas personalizables para la interfaz de usuario.
- Añadir iconos y gráficos para mejorar la visualización de la información.
- Utilizar un diseño responsivo para que la aplicación sea accesible desde diferentes dispositivos.

## Implementar Modulo Wrapper, para partir textos lineales en la cantidad especificada (Campo Numerico define donde se ejecuta el wrap)

## Implementar la capacidad de Consultar y mostrar traducciones hechas en la base de datos de traducciones (aun no existente) que se extraerá de dumps, exports y backups. (habria que definir un output del texto o resultado)

## Revisar conflicto, bloqueo de sesion conflictando con la funcion LOCK, si la interface es bloqueada con la funcion LOCK activada, no es posible escribir para desbloquear, solo cerrar la app. CORREGIR

# RECOMENDACIONES ADICIONALES

## Seguridad
- Implementar autenticación de dos factores (2FA) para mejorar la seguridad de la aplicación.
- Realizar auditorías de seguridad periódicas para identificar y corregir vulnerabilidades.

## Usabilidad
- Realizar pruebas de usabilidad con usuarios reales para identificar áreas de mejora en la interfaz.
- Implementar tutoriales y documentación dentro de la aplicación para ayudar a los nuevos usuarios a familiarizarse con las funcionalidades.

## Mantenimiento
- Establecer un ciclo de mantenimiento regular para actualizar dependencias y corregir errores.
- Implementar un sistema de seguimiento de errores y solicitudes de características para gestionar el desarrollo de la aplicación.

## Escalabilidad
- Diseñar la arquitectura de la aplicación para soportar un aumento en la cantidad de usuarios y datos.
- Implementar balanceo de carga y escalado automático para manejar picos de tráfico.

## Integraciones
- Facilitar la integración con otras aplicaciones y servicios mediante APIs.
- Implementar conectores para servicios populares como Google Drive, Dropbox, y servicios de correo electrónico.

## Accesibilidad
- Asegurarse de que la aplicación cumpla con las pautas de accesibilidad web (WCAG).
- Implementar soporte para múltiples idiomas y localización.

## Monitoreo y Alertas
- Implementar herramientas de monitoreo para rastrear el rendimiento y la disponibilidad de la aplicación.
- Configurar alertas para notificar al equipo de desarrollo sobre problemas críticos en tiempo real.

## Mejora Continua
- Fomentar una cultura de mejora continua mediante la retroalimentación constante de los usuarios.
- Realizar revisiones periódicas del código y refactorizaciones para mantener la calidad del software.



Añade un nuevo layout llamado "Wrapper", que irá al lado derecho del main, haciendo doble click en la esquina inferior derecha, hace una animacion de slide para el lado derecho revelando la nueva interface (en el layout nuevo se puede retornar a main haciendo doble click en la esquina inferior izquierda, hace una animacion de slide volviendo al layout main y mantiene los datos que tenia en "Wrapper" si los hubiera) "Wrapper" sin eliminar los datos que habian en la interface main si los hubiera antes de deslizar ya que se va a trabajar com ambas interfaces para los mismos datos. En la nueva interface este módulo sera muy simple, será una tool para manejar y recortar textos para adequarlos a un formato especifico fuera de la app, en el layout "Wrapper" se presenta un cuadro de texto grande para la entrada del texto que se ira hacer wrapper "recortado", al lado derecho hay un campo numerico para determinar el limite de la cantidad de caracteres que tendrá el wrapper a realizar, en este campo numerico no se permiten letras solo numeros, y abajo un boton llamado "Wrapper NOW" para realizar el wrapper segun la cantidad delimitada en el campo numerico, el wrapper ira recortar el texto lineal introducido saltando la linea en el numero de caracter delimitado, en la logica, si el contenido a wrappear ira cortar una palabra por la mitad, lo hace antes para no afectarla.